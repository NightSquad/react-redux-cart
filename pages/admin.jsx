import { useState } from "react";
import Head from "next/head";
import Header from "../_layouts/Header/Header";
import cartReducer from "../Reducers/cartReducer";
import styles from '../styles/Home.module.css'
import { Provider, useSelector } from "react-redux";
import { UserOutlined } from "@ant-design/icons";
import { useEffect } from "react";
import AuthService from "../services/auth.service";
import { Spin } from "antd";
import { useRouter } from "next/router";
import OrderItem from "../_layouts/UI/order";

function adminPage({itemData}) {
    const [user, setUser] = useState(null)
    const [orders, setOrders] = useState(null)
    const router = useRouter();
    

    useEffect(() => {
        let user = AuthService.getCurrentUser()
        if (!user) router.push("/login")
        if (!user.roles.includes("ROLE_MANAGER")) router.push("/profile")

        AuthService.getAllOrders().then((order) => setOrders(order))
        setUser(user)
    }, []);

    // console.log(orders)
    let cars
    if (orders) {
            cars = orders.map((order) => order.vehicle = itemData[order.vehicle_id - 1])
    }

    console.log(orders)

    console.log(cars)
    let type = "admin"
    return ( 
        <div>
        <Head>
            <title>Profile</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>

            <Provider store={cartReducer}>
            <Header/>
            { user && user.roles.includes("ROLE_MANAGER") ? 
            <div className={styles.info}>
                <div className={styles.orders}>
                    <p>Заказы:</p>
                    <div className={styles.ManageOrders}>
                        {orders ? orders.map(order => <OrderItem key={order.id} data={{order, type}}></OrderItem>) : <Spin size="large"/>}
                    </div>
                </div>
            </div>
            :
            <Spin size="large"/>}
            </Provider>
        </div> 
    );
}

export default adminPage;

export async function getServerSideProps() {
    let response = await fetch('http://localhost:3000/api/items')
    let itemData = await response.json()
  
    // let cart = await fetch('http://localhost:3000/api/cart')
    // let cartData = await cart.json()
  
    return {
      props: {itemData}
    }
  } 